---

- name: Check if binary is already present
  stat:
    path: "{{ loki_binary_path }}"
  register: loki_binary

- name: Get loki binary
  when: not loki_binary.stat.exists or loki_refresh_binary is defined and loki_refresh_binary
  block:

    - name: Make temporary download folder
      tempfile:
        state: directory
        suffix: ".loki"
      register: download_dir

    - name: Download loki binary
      get_url:
        url: "{{ loki_download_url }}"
        dest: "{{ download_dir.path }}/{{ loki_download_url | basename }}"
        mode: 644

    - name: Unarchive loki binary
      unarchive:
        src: "{{ download_dir.path }}/{{ loki_download_url | basename }}"
        dest: "{{ download_dir.path }}"
        remote_src: yes

    - name: Move binary in place
      copy:
        remote_src: yes
        src: "{{ download_dir.path }}/loki-linux-amd64"
        dest: "{{ loki_binary_path }}"
        mode: 0755
        owner: root
        group: root
      register: loki_binary_changed

    - name: Remove temporary download folder
      file:
        path: "{{ download_dir.path }}"
        state: absent


- name: Create loki system user
  user:
    name: loki
    shell: /usr/sbin/nologin
    home: "{{ loki_data_dir }}"
    system: yes
    state: present

- name: Ensure data directory exists with the proper permissions
  file:
    path: "{{ loki_data_dir }}"
    state: directory
    owner: loki
    group: loki
    mode: 0750


- name: Ensure config directory exists
  file:
    path: "{{ loki_config_path | dirname }}"
    state: directory
    owner: root
    group: root
    mode: 0755


- name: Render loki configuration
  template:
    src: loki.yaml.j2
    dest: "{{ loki_config_path }}"
    mode: 0644
    owner: root
    group: root
  register: loki_config

# Note: the "fake" folder is on purpose and correspond to the default Loki/Cortex Tenant ID
# See https://grafana.com/docs/loki/latest/alerting/#interacting-with-the-ruler
- name: Ensure alerting rule directory exists
  file:
    path: "{{ loki_alerting_rules_path }}/fake"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Render loki alerting rule configuration
  template:
    src: alerting_rules.yaml.j2
    dest: "{{ loki_alerting_rules_path }}/fake/alerting_rules.yaml"
    mode: 0644
    owner: root
    group: root
  register: loki_alerting_rules

- name: Render default environment variables
  template:
    src: default.j2
    dest: /etc/default/loki
    mode: 0644
    owner: root
    group: root
  register: defaults

- name: Render systemd unit file
  template:
    src: loki.service.j2
    dest: /etc/systemd/system/loki.service
    mode: 0644
    owner: root
    group: root
  register: systemd


- name: Reload systemd
  systemd:
    daemon_reload: yes
  when: systemd.changed


- name: Enable and start loki
  systemd:
    name: loki
    enabled: true
    state: restarted
  when: defaults.changed or systemd.changed or loki_binary_changed is defined or loki_config.changed or loki_alerting_rules.changed
